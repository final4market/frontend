{"ast":null,"code":"import React,{useEffect,useState,useContext}from'react';import{useNavigate,useLocation}from'react-router-dom';import{AuthContext}from'../../../services/AuthContext';import ModalPopup from'../../modalPopup/ModalPopup';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const KakaoAuthCallback=()=>{const{handleOAuthCallback}=useContext(AuthContext);const navigate=useNavigate();const location=useLocation();const[loading,setLoading]=useState(true);const[showModal,setShowModal]=useState(false);const[modalMessage,setModalMessage]=useState('');useEffect(()=>{const query=new URLSearchParams(location.search);const accessToken=query.get('access_token');console.log('엑세스 토큰:',accessToken);const processOAuthCallback=async accessToken=>{try{await handleOAuthCallback(accessToken,'kakao');setLoading(false);navigate('/productPage');}catch(error){console.error('OAuth 콜백 처리 실패:',error.message);setModalMessage('OAuth 콜백 처리 실패');setShowModal(true);}};if(accessToken){processOAuthCallback(accessToken);}else{setModalMessage('액세스 토큰 발급받기 실패');setShowModal(true);}},[handleOAuthCallback,navigate,location]);const handleModalClose=()=>{setShowModal(false);};return/*#__PURE__*/_jsxs(\"div\",{children:[loading?/*#__PURE__*/_jsx(\"p\",{children:\"\\uB85C\\uADF8\\uC778 \\uCC98\\uB9AC \\uC911...\"}):/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"\\uB85C\\uADF8\\uC778 \\uC131\\uACF5\"})}),/*#__PURE__*/_jsx(ModalPopup,{show:showModal,onClose:handleModalClose,onConfirm:handleModalClose,message:modalMessage,isConfirmation:false})]});};export default KakaoAuthCallback;","map":{"version":3,"names":["React","useEffect","useState","useContext","useNavigate","useLocation","AuthContext","ModalPopup","jsx","_jsx","jsxs","_jsxs","KakaoAuthCallback","handleOAuthCallback","navigate","location","loading","setLoading","showModal","setShowModal","modalMessage","setModalMessage","query","URLSearchParams","search","accessToken","get","console","log","processOAuthCallback","error","message","handleModalClose","children","show","onClose","onConfirm","isConfirmation"],"sources":["D:/workspace/final_4market_frontend/src/components/auth/Login/KakaoAuthCallback.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { AuthContext } from '../../../services/AuthContext';\r\nimport ModalPopup from '../../modalPopup/ModalPopup';\r\n\r\nconst KakaoAuthCallback = () => {\r\n  const { handleOAuthCallback } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalMessage, setModalMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const query = new URLSearchParams(location.search);\r\n    const accessToken = query.get('access_token');\r\n\r\n    console.log('엑세스 토큰:', accessToken);\r\n\r\n    const processOAuthCallback = async (accessToken) => {\r\n      try {\r\n        await handleOAuthCallback(accessToken, 'kakao');\r\n        setLoading(false);\r\n        navigate('/productPage');\r\n      } catch (error) {\r\n        console.error('OAuth 콜백 처리 실패:', error.message);\r\n        setModalMessage('OAuth 콜백 처리 실패');\r\n        setShowModal(true);\r\n      }\r\n    };\r\n\r\n    if (accessToken) {\r\n      processOAuthCallback(accessToken);\r\n    } else {\r\n      setModalMessage('액세스 토큰 발급받기 실패');\r\n      setShowModal(true);\r\n    }\r\n  }, [handleOAuthCallback, navigate, location]);\r\n\r\n  const handleModalClose = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p>로그인 처리 중...</p>\r\n      ) : (\r\n        <div>\r\n          <p>로그인 성공</p>\r\n        </div>\r\n      )}\r\n      <ModalPopup\r\n        show={showModal}\r\n        onClose={handleModalClose}\r\n        onConfirm={handleModalClose}\r\n        message={modalMessage}\r\n        isConfirmation={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KakaoAuthCallback;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAC9D,OAASC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CAC3D,OAASC,WAAW,KAAQ,+BAA+B,CAC3D,MAAO,CAAAC,UAAU,KAAM,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErD,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAAEC,mBAAoB,CAAC,CAAGV,UAAU,CAACG,WAAW,CAAC,CACvD,KAAM,CAAAQ,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAW,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACgB,SAAS,CAAEC,YAAY,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACkB,YAAY,CAAEC,eAAe,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAEpDD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAqB,KAAK,CAAG,GAAI,CAAAC,eAAe,CAACR,QAAQ,CAACS,MAAM,CAAC,CAClD,KAAM,CAAAC,WAAW,CAAGH,KAAK,CAACI,GAAG,CAAC,cAAc,CAAC,CAE7CC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAEH,WAAW,CAAC,CAEnC,KAAM,CAAAI,oBAAoB,CAAG,KAAO,CAAAJ,WAAW,EAAK,CAClD,GAAI,CACF,KAAM,CAAAZ,mBAAmB,CAACY,WAAW,CAAE,OAAO,CAAC,CAC/CR,UAAU,CAAC,KAAK,CAAC,CACjBH,QAAQ,CAAC,cAAc,CAAC,CAC1B,CAAE,MAAOgB,KAAK,CAAE,CACdH,OAAO,CAACG,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAACC,OAAO,CAAC,CAC/CV,eAAe,CAAC,gBAAgB,CAAC,CACjCF,YAAY,CAAC,IAAI,CAAC,CACpB,CACF,CAAC,CAED,GAAIM,WAAW,CAAE,CACfI,oBAAoB,CAACJ,WAAW,CAAC,CACnC,CAAC,IAAM,CACLJ,eAAe,CAAC,gBAAgB,CAAC,CACjCF,YAAY,CAAC,IAAI,CAAC,CACpB,CACF,CAAC,CAAE,CAACN,mBAAmB,CAAEC,QAAQ,CAAEC,QAAQ,CAAC,CAAC,CAE7C,KAAM,CAAAiB,gBAAgB,CAAGA,CAAA,GAAM,CAC7Bb,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,CAED,mBACER,KAAA,QAAAsB,QAAA,EACGjB,OAAO,cACNP,IAAA,MAAAwB,QAAA,CAAG,2CAAW,CAAG,CAAC,cAElBxB,IAAA,QAAAwB,QAAA,cACExB,IAAA,MAAAwB,QAAA,CAAG,iCAAM,CAAG,CAAC,CACV,CACN,cACDxB,IAAA,CAACF,UAAU,EACT2B,IAAI,CAAEhB,SAAU,CAChBiB,OAAO,CAAEH,gBAAiB,CAC1BI,SAAS,CAAEJ,gBAAiB,CAC5BD,OAAO,CAAEX,YAAa,CACtBiB,cAAc,CAAE,KAAM,CACvB,CAAC,EACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAzB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}