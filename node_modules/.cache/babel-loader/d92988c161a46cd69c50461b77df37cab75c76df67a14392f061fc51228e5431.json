{"ast":null,"code":"import axios from 'axios';\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    const decodedToken = jwtDecode(token);\n    const currentTime = Date.now() / 1000;\n    if (decodedToken.exp < currentTime) {\n      localStorage.removeItem('token'); // Clear the expired token\n      // Optionally redirect to login page or refresh token\n      window.location.href = '/login';\n    } else {\n      config.headers['Authorization'] = 'Bearer ' + token;\n    }\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","interceptors","request","use","config","token","localStorage","getItem","decodedToken","jwtDecode","currentTime","Date","now","exp","removeItem","window","location","href","headers","error","Promise","reject"],"sources":["D:/workspace/final_4market_frontend/src/services/AxiosSetup.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\naxios.interceptors.request.use(\r\n  config => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const decodedToken = jwtDecode(token);\r\n      const currentTime = Date.now() / 1000;\r\n\r\n      if (decodedToken.exp < currentTime) {\r\n        localStorage.removeItem('token');  // Clear the expired token\r\n        // Optionally redirect to login page or refresh token\r\n        window.location.href = '/login';\r\n      } else {\r\n        config.headers['Authorization'] = 'Bearer ' + token;\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5BC,MAAM,IAAI;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACT,MAAMG,YAAY,GAAGC,SAAS,CAACJ,KAAK,CAAC;IACrC,MAAMK,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;IAErC,IAAIJ,YAAY,CAACK,GAAG,GAAGH,WAAW,EAAE;MAClCJ,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC,CAAC,CAAE;MACnC;MACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACjC,CAAC,MAAM;MACLb,MAAM,CAACc,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGb,KAAK;IACrD;EACF;EACA,OAAOD,MAAM;AACf,CAAC,EACDe,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}