{"ast":null,"code":"import React from'react';import Backdrop from\"./SubOverlay\";import styles from'./css/SubChat.module.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Sub_chat=_ref=>{let{isChatOpen,onClose,productImage,productInfo,memberId,chatInfo}=_ref;const chatSideClass=isChatOpen?styles.open:'';// 날짜가 변경되는 부분을 표시하기 위한 함수\nconst renderChatWithDate=()=>{let lastDate=null;return chatInfo.map((item,index)=>{const inputDate=new Date(item.chatDate);const year=inputDate.getFullYear();const month=(inputDate.getMonth()+1).toString().padStart(2,'0');const day=inputDate.getDate().toString().padStart(2,'0');const hour=inputDate.getHours();const minute=inputDate.getMinutes();const period=hour>=12?'오후':'오전';const formattedHour=(hour%12).toString().padStart(2,'0');const formattedMinute=minute.toString().padStart(2,'0');const chatDateEqual=\"\".concat(year,\"-\").concat(month,\"-\").concat(day);const isDateChanged=lastDate!==chatDateEqual;lastDate=chatDateEqual;const chatDateHeader=\"\".concat(year,\"\\uB144 \").concat(month,\"\\uC6D4 \").concat(day,\"\\uC77C\");const chatDateMain=\"\".concat(period,\" \").concat(formattedHour,\"\\uC2DC \").concat(formattedMinute,\"\\uBD84\");return/*#__PURE__*/_jsxs(_Fragment,{children:[isDateChanged&&/*#__PURE__*/_jsxs(\"div\",{className:styles.chatDateHeader,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.dateLine}),/*#__PURE__*/_jsx(\"span\",{children:chatDateHeader}),/*#__PURE__*/_jsx(\"span\",{className:styles.dateLine})]}),item.senderId===memberId?/*#__PURE__*/_jsxs(\"div\",{className:styles.chatBoxOpponent,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.chatContentOpponent,children:/*#__PURE__*/_jsx(\"p\",{children:item.chatContent})}),/*#__PURE__*/_jsx(\"div\",{className:styles.chatDateBox,children:/*#__PURE__*/_jsx(\"span\",{children:chatDateMain})})]}):/*#__PURE__*/_jsxs(\"div\",{className:styles.chatBoxMe,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.chatDateMeBox,children:/*#__PURE__*/_jsx(\"span\",{children:chatDateMain})}),/*#__PURE__*/_jsx(\"div\",{className:styles.chatContentMe,children:/*#__PURE__*/_jsx(\"p\",{children:item.chatContent})})]})]});});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Backdrop,{show:isChatOpen,onClick:onClose}),/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(styles.main_chat_side,\" \").concat(chatSideClass),children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.main_chat_header,children:[/*#__PURE__*/_jsx(\"img\",{src:\"/img/back_arrow.png\",onClick:onClose,alt:\"Back\"}),/*#__PURE__*/_jsx(\"h2\",{children:memberId})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.main_chat_product_info,children:[/*#__PURE__*/_jsx(\"img\",{src:productImage?productImage.productImagePath:'/img/default_product.png',alt:\"Product\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[productInfo?productInfo.productPrice.toLocaleString():'가격정보 없음',\"\\uC6D0\"]}),/*#__PURE__*/_jsx(\"p\",{children:productInfo?productInfo.productTitle:'제목 없음'})]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.chat_content_container,children:chatInfo&&chatInfo.length>0&&renderChatWithDate()}),/*#__PURE__*/_jsx(\"div\",{className:styles.chat_content_input})]})]});};export default Sub_chat;","map":{"version":3,"names":["React","Backdrop","styles","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Sub_chat","_ref","isChatOpen","onClose","productImage","productInfo","memberId","chatInfo","chatSideClass","open","renderChatWithDate","lastDate","map","item","index","inputDate","Date","chatDate","year","getFullYear","month","getMonth","toString","padStart","day","getDate","hour","getHours","minute","getMinutes","period","formattedHour","formattedMinute","chatDateEqual","concat","isDateChanged","chatDateHeader","chatDateMain","children","className","dateLine","senderId","chatBoxOpponent","chatContentOpponent","chatContent","chatDateBox","chatBoxMe","chatDateMeBox","chatContentMe","show","onClick","main_chat_side","main_chat_header","src","alt","main_chat_product_info","productImagePath","productPrice","toLocaleString","productTitle","chat_content_container","length","chat_content_input"],"sources":["D:/workspace/final_4market_frontend/src/components/subPage/SubChat.jsx"],"sourcesContent":["import React from 'react';\r\nimport Backdrop from \"./SubOverlay\";\r\nimport styles from './css/SubChat.module.css';\r\n\r\nconst Sub_chat = ({ isChatOpen, onClose, productImage, productInfo, memberId, chatInfo }) => {\r\n  const chatSideClass = isChatOpen ? styles.open : '';\r\n  // 날짜가 변경되는 부분을 표시하기 위한 함수\r\n  const renderChatWithDate = () => {\r\n    let lastDate = null;\r\n\r\n    return chatInfo.map((item, index) => {\r\n\r\n      const inputDate = new Date(item.chatDate);\r\n\r\n      const year = inputDate.getFullYear();\r\n      const month = (inputDate.getMonth() + 1).toString().padStart(2, '0');\r\n      const day = inputDate.getDate().toString().padStart(2, '0');\r\n      const hour = inputDate.getHours();\r\n      const minute = inputDate.getMinutes();\r\n      const period = hour >= 12 ? '오후' : '오전';\r\n\r\n      const formattedHour = (hour % 12).toString().padStart(2, '0');\r\n      const formattedMinute = minute.toString().padStart(2, '0');\r\n\r\n      const chatDateEqual = `${year}-${month}-${day}`;\r\n\r\n      const isDateChanged = lastDate !== chatDateEqual;\r\n      lastDate = chatDateEqual;\r\n\r\n      const chatDateHeader = `${year}년 ${month}월 ${day}일`;\r\n      const chatDateMain = `${period} ${formattedHour}시 ${formattedMinute}분`;\r\n      return (\r\n        <>\r\n          {isDateChanged && (\r\n            <div className={styles.chatDateHeader}>\r\n              <span className={styles.dateLine}></span>\r\n              <span>{chatDateHeader}</span>\r\n              <span className={styles.dateLine}></span>\r\n            </div>\r\n          )}\r\n          {item.senderId === memberId ? (\r\n            <div className={styles.chatBoxOpponent}>\r\n              <div className={styles.chatContentOpponent}>\r\n                <p>{item.chatContent}</p>\r\n              </div>\r\n              <div className={styles.chatDateBox}>\r\n                <span>{chatDateMain}</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={styles.chatBoxMe}>\r\n              <div className={styles.chatDateMeBox}>\r\n                <span>{chatDateMain}</span>\r\n              </div>\r\n              <div className={styles.chatContentMe}>\r\n                <p>{item.chatContent}</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Backdrop show={isChatOpen} onClick={onClose} />\r\n      <div className={`${styles.main_chat_side} ${chatSideClass}`}>\r\n        <div className={styles.main_chat_header}>\r\n          <img src=\"/img/back_arrow.png\" onClick={onClose} alt=\"Back\" />\r\n          <h2>{memberId}</h2>\r\n        </div>\r\n        <div className={styles.main_chat_product_info}>\r\n          <img src={productImage ? productImage.productImagePath : '/img/default_product.png'} alt=\"Product\" />\r\n          <div>\r\n            <h3>{productInfo ? productInfo.productPrice.toLocaleString() : '가격정보 없음'}원</h3>\r\n            <p>{productInfo ? productInfo.productTitle : '제목 없음'}</p>\r\n          </div>\r\n        </div>\r\n        <div className={styles.chat_content_container}>\r\n          {chatInfo && chatInfo.length > 0 && renderChatWithDate()}\r\n        </div>\r\n        <div className={styles.chat_content_input}>\r\n          {/* 채팅 입력 필드를 여기에 추가 */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sub_chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}