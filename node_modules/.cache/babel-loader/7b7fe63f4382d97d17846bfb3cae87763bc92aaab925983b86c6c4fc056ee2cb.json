{"ast":null,"code":"import React from'react';import{useDaumPostcodePopup}from'react-daum-postcode';import styles from'./css/ProductTradeArea.module.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProductTradeArea=_ref=>{let{formData,handleChange}=_ref;// DaumPostcodePopup 훅을 사용하여 팝업을 여는 함수 정의\nconst open=useDaumPostcodePopup();const handleComplete=data=>{let fullAddress=data.address;let extraAddress='';// 추가될 주소\nlet localAddress=data.sido+' '+data.sigungu;// 지역주소 (시, 도 + 시, 군, 구)\nif(data.addressType==='R'){// 주소타입이 도로명주소일 경우\nif(data.bname!==''){extraAddress+=data.bname;// 법정동, 법정리\n}if(data.buildingName!==''){// 건물명\nextraAddress+=extraAddress!==''?\", \".concat(data.buildingName):data.buildingName;}// 지역주소 제외 전체주소 치환\nfullAddress=fullAddress.replace(localAddress,'');// 상태 업데이트\nhandleChange({target:{name:'tradeArea',value:localAddress+' '+fullAddress+(extraAddress!==''?\" (\".concat(extraAddress,\")\"):'')}});}};// 클릭 시 발생할 이벤트\nconst handleClick=()=>{// 주소 검색이 완료되고, 결과 주소를 클릭 시 해당 함수 수행\nopen({onComplete:handleComplete});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleClick,className:styles.ProductTradeArea,children:\"\\uC9C1\\uAC70\\uB798 \\uC8FC\\uC18C \\uB4F1\\uB85D\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"tradeArea\",value:formData.tradeArea||''// formData.tradeArea가 undefined일 때 빈 문자열로 설정\n,readOnly:true// 입력 불가, 주소 찾기 결과만 표시\n,className:styles.tradeAreaInput// CSS 클래스 추가 (필요에 따라 스타일 조정)\n})]});};export default ProductTradeArea;","map":{"version":3,"names":["React","useDaumPostcodePopup","styles","jsx","_jsx","jsxs","_jsxs","ProductTradeArea","_ref","formData","handleChange","open","handleComplete","data","fullAddress","address","extraAddress","localAddress","sido","sigungu","addressType","bname","buildingName","concat","replace","target","name","value","handleClick","onComplete","children","type","onClick","className","tradeArea","readOnly","tradeAreaInput"],"sources":["D:/workspace/final_4market_frontend/src/components/productRegistration/ProductTradeArea.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useDaumPostcodePopup } from 'react-daum-postcode';\r\nimport styles from './css/ProductTradeArea.module.css'\r\n\r\nconst ProductTradeArea = ({ formData, handleChange }) => {\r\n    // DaumPostcodePopup 훅을 사용하여 팝업을 여는 함수 정의\r\n    const open = useDaumPostcodePopup();\r\n\r\n    const handleComplete = (data) => {\r\n        let fullAddress = data.address;\r\n        let extraAddress = ''; // 추가될 주소\r\n        let localAddress = data.sido + ' ' + data.sigungu; // 지역주소 (시, 도 + 시, 군, 구)\r\n\r\n        if (data.addressType === 'R') { // 주소타입이 도로명주소일 경우\r\n            if (data.bname !== '') {\r\n                extraAddress += data.bname; // 법정동, 법정리\r\n            }\r\n            if (data.buildingName !== '') { // 건물명\r\n                extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            // 지역주소 제외 전체주소 치환\r\n            fullAddress = fullAddress.replace(localAddress, '');\r\n            // 상태 업데이트\r\n            handleChange({\r\n                target: {\r\n                    name: 'tradeArea',\r\n                    value: localAddress + ' ' + fullAddress + (extraAddress !== '' ? ` (${extraAddress})` : '')\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // 클릭 시 발생할 이벤트\r\n    const handleClick = () => {\r\n        // 주소 검색이 완료되고, 결과 주소를 클릭 시 해당 함수 수행\r\n        open({ onComplete: handleComplete });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button type=\"button\" onClick={handleClick}  className={styles.ProductTradeArea}>\r\n               직거래 주소 등록\r\n            </button>\r\n            <input\r\n                type=\"text\"\r\n                name=\"tradeArea\"\r\n                value={formData.tradeArea || ''} // formData.tradeArea가 undefined일 때 빈 문자열로 설정\r\n                readOnly // 입력 불가, 주소 찾기 결과만 표시\r\n                className={styles.tradeAreaInput} // CSS 클래스 추가 (필요에 따라 스타일 조정)\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductTradeArea;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,oBAAoB,KAAQ,qBAAqB,CAC1D,MAAO,CAAAC,MAAM,KAAM,mCAAmC,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtD,KAAM,CAAAC,gBAAgB,CAAGC,IAAA,EAAgC,IAA/B,CAAEC,QAAQ,CAAEC,YAAa,CAAC,CAAAF,IAAA,CAChD;AACA,KAAM,CAAAG,IAAI,CAAGV,oBAAoB,CAAC,CAAC,CAEnC,KAAM,CAAAW,cAAc,CAAIC,IAAI,EAAK,CAC7B,GAAI,CAAAC,WAAW,CAAGD,IAAI,CAACE,OAAO,CAC9B,GAAI,CAAAC,YAAY,CAAG,EAAE,CAAE;AACvB,GAAI,CAAAC,YAAY,CAAGJ,IAAI,CAACK,IAAI,CAAG,GAAG,CAAGL,IAAI,CAACM,OAAO,CAAE;AAEnD,GAAIN,IAAI,CAACO,WAAW,GAAK,GAAG,CAAE,CAAE;AAC5B,GAAIP,IAAI,CAACQ,KAAK,GAAK,EAAE,CAAE,CACnBL,YAAY,EAAIH,IAAI,CAACQ,KAAK,CAAE;AAChC,CACA,GAAIR,IAAI,CAACS,YAAY,GAAK,EAAE,CAAE,CAAE;AAC5BN,YAAY,EAAKA,YAAY,GAAK,EAAE,MAAAO,MAAA,CAAQV,IAAI,CAACS,YAAY,EAAKT,IAAI,CAACS,YAAa,CACxF,CACA;AACAR,WAAW,CAAGA,WAAW,CAACU,OAAO,CAACP,YAAY,CAAE,EAAE,CAAC,CACnD;AACAP,YAAY,CAAC,CACTe,MAAM,CAAE,CACJC,IAAI,CAAE,WAAW,CACjBC,KAAK,CAAEV,YAAY,CAAG,GAAG,CAAGH,WAAW,EAAIE,YAAY,GAAK,EAAE,MAAAO,MAAA,CAAQP,YAAY,MAAM,EAAE,CAC9F,CACJ,CAAC,CAAC,CACN,CACJ,CAAC,CAED;AACA,KAAM,CAAAY,WAAW,CAAGA,CAAA,GAAM,CACtB;AACAjB,IAAI,CAAC,CAAEkB,UAAU,CAAEjB,cAAe,CAAC,CAAC,CACxC,CAAC,CAED,mBACIN,KAAA,QAAAwB,QAAA,eACI1B,IAAA,WAAQ2B,IAAI,CAAC,QAAQ,CAACC,OAAO,CAAEJ,WAAY,CAAEK,SAAS,CAAE/B,MAAM,CAACK,gBAAiB,CAAAuB,QAAA,CAAC,8CAEjF,CAAQ,CAAC,cACT1B,IAAA,UACI2B,IAAI,CAAC,MAAM,CACXL,IAAI,CAAC,WAAW,CAChBC,KAAK,CAAElB,QAAQ,CAACyB,SAAS,EAAI,EAAI;AAAA,CACjCC,QAAQ,KAAC;AAAA,CACTF,SAAS,CAAE/B,MAAM,CAACkC,cAAgB;AAAA,CACrC,CAAC,EACD,CAAC,CAEd,CAAC,CAED,cAAe,CAAA7B,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}