{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\final_4market_frontend\\\\src\\\\components\\\\auth\\\\Login\\\\NaverAuthCallback.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../../services/AuthContext';\nimport ModalPopup from '../../modalPopup/ModalPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NaverAuthCallback = () => {\n  _s();\n  const {\n    handleOAuthCallback\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [modalMessage, setModalMessage] = useState('');\n  useEffect(() => {\n    const {\n      hash\n    } = window.location;\n    const params = new URLSearchParams(hash.substring(1)); // '#'를 제거하고 파싱\n    const accessToken = params.get('access_token');\n    const processOAuthCallback = async accessToken => {\n      try {\n        await handleOAuthCallback(accessToken, 'naver');\n        setLoading(false);\n        navigate('/productPage');\n      } catch (error) {\n        console.error('OAuth 콜백 처리 실패:', error.message);\n        setModalMessage('OAuth 콜백 처리 실패');\n        setShowModal(true);\n      }\n    };\n    if (accessToken) {\n      processOAuthCallback(accessToken);\n    } else {\n      //토큰이 없을 시\n      setModalMessage('토큰 가져오기 실패');\n      setShowModal(true);\n    }\n  }, [handleOAuthCallback, navigate]);\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB85C\\uADF8\\uC778 \\uCC98\\uB9AC \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uB85C\\uADF8\\uC778 \\uC131\\uACF5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ModalPopup, {\n      show: showModal,\n      onClose: handleModalClose,\n      onConfirm: handleModalClose,\n      message: modalMessage,\n      isConfirmation: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(NaverAuthCallback, \"aSdY8S8uRF5vzClJMM8ylPtSic4=\", false, function () {\n  return [useNavigate];\n});\n_c = NaverAuthCallback;\nexport default NaverAuthCallback;\nvar _c;\n$RefreshReg$(_c, \"NaverAuthCallback\");","map":{"version":3,"names":["React","useEffect","useContext","useState","useNavigate","AuthContext","ModalPopup","jsxDEV","_jsxDEV","NaverAuthCallback","_s","handleOAuthCallback","navigate","loading","setLoading","showModal","setShowModal","modalMessage","setModalMessage","hash","window","location","params","URLSearchParams","substring","accessToken","get","processOAuthCallback","error","console","message","handleModalClose","children","fileName","_jsxFileName","lineNumber","columnNumber","show","onClose","onConfirm","isConfirmation","_c","$RefreshReg$"],"sources":["D:/workspace/final_4market_frontend/src/components/auth/Login/NaverAuthCallback.jsx"],"sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../../../services/AuthContext';\r\nimport ModalPopup from '../../modalPopup/ModalPopup';\r\n\r\nconst NaverAuthCallback = () => {\r\n  const { handleOAuthCallback } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(true);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalMessage, setModalMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const { hash } = window.location;\r\n    const params = new URLSearchParams(hash.substring(1)); // '#'를 제거하고 파싱\r\n    const accessToken = params.get('access_token');\r\n\r\n    const processOAuthCallback = async (accessToken) => {\r\n      try {\r\n        await handleOAuthCallback(accessToken, 'naver');\r\n        setLoading(false);\r\n        navigate('/productPage');\r\n      } catch (error) {\r\n        console.error('OAuth 콜백 처리 실패:', error.message);\r\n        setModalMessage('OAuth 콜백 처리 실패');\r\n        setShowModal(true);\r\n      }\r\n    };\r\n\r\n    if (accessToken) {\r\n      processOAuthCallback(accessToken);\r\n    } else {\r\n      //토큰이 없을 시\r\n      setModalMessage('토큰 가져오기 실패');\r\n      setShowModal(true);\r\n    }\r\n  }, [handleOAuthCallback, navigate]);\r\n\r\n  const handleModalClose = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p>로그인 처리 중...</p>\r\n      ) : (\r\n        <div>\r\n          <p>로그인 성공</p>\r\n        </div>\r\n      )}\r\n      <ModalPopup\r\n        show={showModal}\r\n        onClose={handleModalClose}\r\n        onConfirm={handleModalClose}\r\n        message={modalMessage}\r\n        isConfirmation={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NaverAuthCallback;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}