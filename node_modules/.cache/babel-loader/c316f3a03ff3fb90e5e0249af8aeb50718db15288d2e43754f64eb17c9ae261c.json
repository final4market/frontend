{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\final_4market_frontend\\\\src\\\\components\\\\productRegistration\\\\ProductTradeArea.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDaumPostcodePopup } from 'react-daum-postcode';\nimport styles from './css/ProductTradeArea.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductTradeArea = ({\n  formData,\n  handleChange\n}) => {\n  _s();\n  // DaumPostcodePopup 훅을 사용하여 팝업을 여는 함수 정의\n  const open = useDaumPostcodePopup();\n  const handleComplete = data => {\n    let fullAddress = data.address;\n    let extraAddress = ''; // 추가될 주소\n    let localAddress = data.sido + ' ' + data.sigungu; // 지역주소 (시, 도 + 시, 군, 구)\n\n    if (data.addressType === 'R') {\n      // 주소타입이 도로명주소일 경우\n      if (data.bname !== '') {\n        extraAddress += data.bname; // 법정동, 법정리\n      }\n      if (data.buildingName !== '') {\n        // 건물명\n        extraAddress += extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName;\n      }\n      // 지역주소 제외 전체주소 치환\n      fullAddress = fullAddress.replace(localAddress, '');\n      // 상태 업데이트\n      handleChange({\n        target: {\n          name: 'tradeArea',\n          value: localAddress + ' ' + fullAddress + (extraAddress !== '' ? ` (${extraAddress})` : '')\n        }\n      });\n    }\n  };\n\n  // 클릭 시 발생할 이벤트\n  const handleClick = () => {\n    // 주소 검색이 완료되고, 결과 주소를 클릭 시 해당 함수 수행\n    open({\n      onComplete: handleComplete\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleClick,\n      className: styles.ProductTradeArea,\n      children: \"\\uC9C1\\uAC70\\uB798 \\uC8FC\\uC18C \\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"tradeArea\",\n      value: formData.tradeArea || '' // formData.tradeArea가 undefined일 때 빈 문자열로 설정\n      ,\n      readOnly: true // 입력 불가, 주소 찾기 결과만 표시\n      ,\n      className: styles.tradeAreaInput // CSS 클래스 추가 (필요에 따라 스타일 조정)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductTradeArea, \"wdTqFaf4SE0v5bH+s4jJJmiPkAQ=\", false, function () {\n  return [useDaumPostcodePopup];\n});\n_c = ProductTradeArea;\nexport default ProductTradeArea;\nvar _c;\n$RefreshReg$(_c, \"ProductTradeArea\");","map":{"version":3,"names":["React","useDaumPostcodePopup","styles","jsxDEV","_jsxDEV","ProductTradeArea","formData","handleChange","_s","open","handleComplete","data","fullAddress","address","extraAddress","localAddress","sido","sigungu","addressType","bname","buildingName","replace","target","name","value","handleClick","onComplete","children","type","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","tradeArea","readOnly","tradeAreaInput","_c","$RefreshReg$"],"sources":["D:/workspace/final_4market_frontend/src/components/productRegistration/ProductTradeArea.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useDaumPostcodePopup } from 'react-daum-postcode';\r\nimport styles from './css/ProductTradeArea.module.css'\r\n\r\nconst ProductTradeArea = ({ formData, handleChange }) => {\r\n    // DaumPostcodePopup 훅을 사용하여 팝업을 여는 함수 정의\r\n    const open = useDaumPostcodePopup();\r\n\r\n    const handleComplete = (data) => {\r\n        let fullAddress = data.address;\r\n        let extraAddress = ''; // 추가될 주소\r\n        let localAddress = data.sido + ' ' + data.sigungu; // 지역주소 (시, 도 + 시, 군, 구)\r\n\r\n        if (data.addressType === 'R') { // 주소타입이 도로명주소일 경우\r\n            if (data.bname !== '') {\r\n                extraAddress += data.bname; // 법정동, 법정리\r\n            }\r\n            if (data.buildingName !== '') { // 건물명\r\n                extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            // 지역주소 제외 전체주소 치환\r\n            fullAddress = fullAddress.replace(localAddress, '');\r\n            // 상태 업데이트\r\n            handleChange({\r\n                target: {\r\n                    name: 'tradeArea',\r\n                    value: localAddress + ' ' + fullAddress + (extraAddress !== '' ? ` (${extraAddress})` : '')\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // 클릭 시 발생할 이벤트\r\n    const handleClick = () => {\r\n        // 주소 검색이 완료되고, 결과 주소를 클릭 시 해당 함수 수행\r\n        open({ onComplete: handleComplete });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button type=\"button\" onClick={handleClick}  className={styles.ProductTradeArea}>\r\n               직거래 주소 등록\r\n            </button>\r\n            <input\r\n                type=\"text\"\r\n                name=\"tradeArea\"\r\n                value={formData.tradeArea || ''} // formData.tradeArea가 undefined일 때 빈 문자열로 설정\r\n                readOnly // 입력 불가, 주소 찾기 결과만 표시\r\n                className={styles.tradeAreaInput} // CSS 클래스 추가 (필요에 따라 스타일 조정)\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductTradeArea;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,qBAAqB;AAC1D,OAAOC,MAAM,MAAM,mCAAmC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrD;EACA,MAAMC,IAAI,GAAGR,oBAAoB,CAAC,CAAC;EAEnC,MAAMS,cAAc,GAAIC,IAAI,IAAK;IAC7B,IAAIC,WAAW,GAAGD,IAAI,CAACE,OAAO;IAC9B,IAAIC,YAAY,GAAG,EAAE,CAAC,CAAC;IACvB,IAAIC,YAAY,GAAGJ,IAAI,CAACK,IAAI,GAAG,GAAG,GAAGL,IAAI,CAACM,OAAO,CAAC,CAAC;;IAEnD,IAAIN,IAAI,CAACO,WAAW,KAAK,GAAG,EAAE;MAAE;MAC5B,IAAIP,IAAI,CAACQ,KAAK,KAAK,EAAE,EAAE;QACnBL,YAAY,IAAIH,IAAI,CAACQ,KAAK,CAAC,CAAC;MAChC;MACA,IAAIR,IAAI,CAACS,YAAY,KAAK,EAAE,EAAE;QAAE;QAC5BN,YAAY,IAAKA,YAAY,KAAK,EAAE,GAAG,KAAKH,IAAI,CAACS,YAAY,EAAE,GAAGT,IAAI,CAACS,YAAa;MACxF;MACA;MACAR,WAAW,GAAGA,WAAW,CAACS,OAAO,CAACN,YAAY,EAAE,EAAE,CAAC;MACnD;MACAR,YAAY,CAAC;QACTe,MAAM,EAAE;UACJC,IAAI,EAAE,WAAW;UACjBC,KAAK,EAAET,YAAY,GAAG,GAAG,GAAGH,WAAW,IAAIE,YAAY,KAAK,EAAE,GAAG,KAAKA,YAAY,GAAG,GAAG,EAAE;QAC9F;MACJ,CAAC,CAAC;IACN;EACJ,CAAC;;EAED;EACA,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACtB;IACAhB,IAAI,CAAC;MAAEiB,UAAU,EAAEhB;IAAe,CAAC,CAAC;EACxC,CAAC;EAED,oBACIN,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEJ,WAAY;MAAEK,SAAS,EAAE5B,MAAM,CAACG,gBAAiB;MAAAsB,QAAA,EAAC;IAEjF;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT9B,OAAA;MACIwB,IAAI,EAAC,MAAM;MACXL,IAAI,EAAC,WAAW;MAChBC,KAAK,EAAElB,QAAQ,CAAC6B,SAAS,IAAI,EAAG,CAAC;MAAA;MACjCC,QAAQ,OAAC;MAAA;MACTN,SAAS,EAAE5B,MAAM,CAACmC,cAAe,CAAC;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAC1B,EAAA,CAhDIH,gBAAgB;EAAA,QAELJ,oBAAoB;AAAA;AAAAqC,EAAA,GAF/BjC,gBAAgB;AAkDtB,eAAeA,gBAAgB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}