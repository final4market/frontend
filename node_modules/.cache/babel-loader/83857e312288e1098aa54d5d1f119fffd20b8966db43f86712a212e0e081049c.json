{"ast":null,"code":"import React,{useEffect,useState}from'react';import styles from'./css/header_chatList.module.css';import Backdrop from'../subPage/SubOverlay';import axios from'axios';import Sub_chat from'../subPage/SubChat';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Chat=_ref=>{let{isChatOpen,onClose}=_ref;const[chatRooms,setChatRooms]=useState([]);const[chatInfo,setChatInfo]=useState([]);const[otherIds,setOtherIds]=useState([]);const[profiles,setProfiles]=useState([]);const[productImg,setProductImg]=useState(null);// 초기값을 null로 설정\nconst[productInfo,setProductInfo]=useState(null);// 초기값을 null로 설정\nconst[activeMemberId,setActiveMemberId]=useState('');const[activeProductNo,setActiveProductNo]=useState('');// 추가된 상태\nconst chatSideClass=isChatOpen?styles.open:'';useEffect(()=>{const fetchChatRooms=async()=>{try{const responseChatRoom=await axios.get('http://localhost:9999/selectChatRoom?memberId=member3');setChatRooms(responseChatRoom.data);// 채팅방 정보로 상태 업데이트\n}catch(error){console.error(\"Error fetching chat rooms:\",error);}};fetchChatRooms();},[]);// 빈 배열로 초기 렌더링 시 한 번만 실행\nuseEffect(()=>{if(chatRooms.length>0){const otherIds=chatRooms.flatMap(room=>[room.buyerId,room.sellerId].filter(id=>id!=='member3')// 'member3'이 아닌 아이디만 필터링\n);setOtherIds(otherIds);}},[chatRooms]);// `chatRooms`가 변경될 때마다 실행\nuseEffect(()=>{const fetchChatProfile=async()=>{try{const response=await axios.post('http://localhost:9999/buyerProfile',{memberId:otherIds});setProfiles(response.data);}catch(error){console.error(\"Error fetching chat profile:\",error);}};if(otherIds.length>0){fetchChatProfile();}},[otherIds]);const[isMainChatOpen,setIsMainChatOpen]=useState(false);const mainChatOpen=async(profileId,productNo)=>{setActiveMemberId(profileId);setActiveProductNo(productNo);// 활성화된 상품 번호 설정s\nsetIsMainChatOpen(true);try{const productResponse=await axios.get(\"http://localhost:9999/productInfo?productNo=\".concat(productNo));setProductInfo(productResponse.data);const imageResponse=await axios.get(\"http://localhost:9999/productImage?productNo=\".concat(productNo));setProductImg(imageResponse.data[0]);const responseChatInfo=await axios.get(\"http://localhost:9999/selectChatInfo?memberId=\".concat(profileId));console.log(responseChatInfo.data);setChatInfo(responseChatInfo.data);// 채팅방 정보로 상태 업데이트\n}catch(error){console.error(error);}};const mainChatClose=()=>{setIsMainChatOpen(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Backdrop,{show:isChatOpen,onClick:onClose}),/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(styles.chat_side,\" \").concat(chatSideClass),children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.chat_side_header,children:[/*#__PURE__*/_jsx(\"span\",{onClick:onClose,children:/*#__PURE__*/_jsx(\"img\",{src:\"/img/x.png\",alt:\"close\",className:styles.x})}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\uCC44\\uD305\\uBC29\"})]}),chatRooms.map((room,index)=>{// 채팅방에 연결된 상대방의 ID를 찾기\nconst profileId=room.buyerId==='member3'?room.sellerId:room.buyerId;// 프로필 이미지를 찾기\nconst profile=profiles.find(profile=>profile.MEMBERID===profileId);const profileImage=profile?profile.PROFILEPATH:'/img/basic.png';const chatDate=room.chatDate?new Date(room.chatDate).toLocaleDateString('ko-KR'):'날짜 없음';return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.chat_list,onClick:()=>mainChatOpen(profileId,room.productNo)// 채팅방 클릭 시 상품 번호도 전달\n,children:[/*#__PURE__*/_jsx(\"img\",{src:profileImage,alt:\"profile\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.chat_list_sub,children:[/*#__PURE__*/_jsx(\"h2\",{children:profileId}),/*#__PURE__*/_jsx(\"span\",{children:chatDate})]}),/*#__PURE__*/_jsx(\"p\",{children:room.chatContent})]})]}),/*#__PURE__*/_jsx(Sub_chat,{isChatOpen:isMainChatOpen,onClose:mainChatClose,memberId:activeMemberId,productImage:productImg,productInfo:productInfo,chatInfo:chatInfo})]});})]})]});};export default Chat;","map":{"version":3,"names":["React","useEffect","useState","styles","Backdrop","axios","Sub_chat","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Chat","_ref","isChatOpen","onClose","chatRooms","setChatRooms","chatInfo","setChatInfo","otherIds","setOtherIds","profiles","setProfiles","productImg","setProductImg","productInfo","setProductInfo","activeMemberId","setActiveMemberId","activeProductNo","setActiveProductNo","chatSideClass","open","fetchChatRooms","responseChatRoom","get","data","error","console","length","flatMap","room","buyerId","sellerId","filter","id","fetchChatProfile","response","post","memberId","isMainChatOpen","setIsMainChatOpen","mainChatOpen","profileId","productNo","productResponse","concat","imageResponse","responseChatInfo","log","mainChatClose","children","show","onClick","className","chat_side","chat_side_header","src","alt","x","map","index","profile","find","MEMBERID","profileImage","PROFILEPATH","chatDate","Date","toLocaleDateString","chat_list","chat_list_sub","chatContent","productImage"],"sources":["D:/workspace/final_4market_frontend/src/components/header/Header_ChatList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styles from './css/header_chatList.module.css';\r\nimport Backdrop from '../subPage/SubOverlay';\r\nimport axios from 'axios';\r\nimport Sub_chat from '../subPage/SubChat'\r\n\r\nconst Chat = ({ isChatOpen, onClose }) => {\r\n  const [chatRooms, setChatRooms] = useState([]);\r\n  const [chatInfo, setChatInfo] = useState([]);\r\n  const [otherIds, setOtherIds] = useState([]);\r\n  const [profiles, setProfiles] = useState([]);\r\n  const [productImg, setProductImg] = useState(null); // 초기값을 null로 설정\r\n  const [productInfo, setProductInfo] = useState(null); // 초기값을 null로 설정\r\n  const [activeMemberId, setActiveMemberId] = useState('');\r\n  const [activeProductNo, setActiveProductNo] = useState(''); // 추가된 상태\r\n  const chatSideClass = isChatOpen ? styles.open : '';\r\n\r\n  useEffect(() => {\r\n    const fetchChatRooms = async () => {\r\n      try {\r\n        const responseChatRoom = await axios.get('http://localhost:9999/selectChatRoom?memberId=member3');\r\n        setChatRooms(responseChatRoom.data); // 채팅방 정보로 상태 업데이트\r\n      } catch (error) {\r\n        console.error(\"Error fetching chat rooms:\", error);\r\n      }\r\n    };\r\n    fetchChatRooms();\r\n  }, []); // 빈 배열로 초기 렌더링 시 한 번만 실행\r\n\r\n  useEffect(() => {\r\n    if (chatRooms.length > 0) {\r\n      const otherIds = chatRooms.flatMap(room =>\r\n        [room.buyerId, room.sellerId]\r\n          .filter(id => id !== 'member3') // 'member3'이 아닌 아이디만 필터링\r\n      );\r\n      setOtherIds(otherIds);\r\n    }\r\n  }, [chatRooms]); // `chatRooms`가 변경될 때마다 실행\r\n\r\n  useEffect(() => {\r\n    const fetchChatProfile = async () => {\r\n      try {\r\n        const response = await axios.post('http://localhost:9999/buyerProfile', { memberId: otherIds });\r\n        setProfiles(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching chat profile:\", error);\r\n      }\r\n    };\r\n\r\n    if (otherIds.length > 0) {\r\n      fetchChatProfile();\r\n    }\r\n  }, [otherIds]);\r\n\r\n  const [isMainChatOpen, setIsMainChatOpen] = useState(false);\r\n\r\n  const mainChatOpen = async (profileId, productNo) => {\r\n    setActiveMemberId(profileId);\r\n    setActiveProductNo(productNo); // 활성화된 상품 번호 설정s\r\n    setIsMainChatOpen(true);\r\n\r\n    try {\r\n      const productResponse = await axios.get(`http://localhost:9999/productInfo?productNo=${productNo}`);\r\n      setProductInfo(productResponse.data);\r\n      const imageResponse = await axios.get(`http://localhost:9999/productImage?productNo=${productNo}`);\r\n      setProductImg(imageResponse.data[0]);\r\n      const responseChatInfo = await axios.get(`http://localhost:9999/selectChatInfo?memberId=${profileId}`);\r\n      console.log(responseChatInfo.data);\r\n      setChatInfo(responseChatInfo.data); // 채팅방 정보로 상태 업데이트\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n\r\n  const mainChatClose = () => {\r\n    setIsMainChatOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Backdrop\r\n        show={isChatOpen}\r\n        onClick={onClose}\r\n      />\r\n      <div className={`${styles.chat_side} ${chatSideClass}`}>\r\n        <div className={styles.chat_side_header}>\r\n          <span onClick={onClose}>\r\n            <img src='/img/x.png' alt='close' className={styles.x} />\r\n          </span>\r\n          <h2>채팅방</h2>\r\n        </div>\r\n        {chatRooms.map((room, index) => {\r\n          // 채팅방에 연결된 상대방의 ID를 찾기\r\n          const profileId = room.buyerId === 'member3' ? room.sellerId : room.buyerId;\r\n          // 프로필 이미지를 찾기\r\n          const profile = profiles.find(profile => profile.MEMBERID === profileId);\r\n          const profileImage = profile ? profile.PROFILEPATH : '/img/basic.png';\r\n          const chatDate = room.chatDate ? new Date(room.chatDate).toLocaleDateString('ko-KR') : '날짜 없음';\r\n\r\n          return (\r\n            <>\r\n              <div\r\n                className={styles.chat_list}\r\n                onClick={() => mainChatOpen(profileId, room.productNo)} // 채팅방 클릭 시 상품 번호도 전달\r\n              >\r\n                <img src={profileImage} alt='profile' />\r\n                <div>\r\n                  <div className={styles.chat_list_sub}>\r\n                    <h2>{profileId}</h2>\r\n                    <span>{chatDate}</span>\r\n                  </div>\r\n                  <p>{room.chatContent}</p>\r\n                </div>\r\n              </div>\r\n              <Sub_chat\r\n                isChatOpen={isMainChatOpen}\r\n                onClose={mainChatClose}\r\n                memberId={activeMemberId}\r\n                productImage={productImg}\r\n                productInfo={productInfo}\r\n                chatInfo={chatInfo}\r\n              />\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}