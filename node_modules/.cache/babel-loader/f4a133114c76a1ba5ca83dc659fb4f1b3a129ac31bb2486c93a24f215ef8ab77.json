{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\final_4market_frontend\\\\src\\\\services\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [profile, setProfile] = useState(null);\n  const checkTokenValidity = async () => {\n    const token = localStorage.getItem('token');\n    const tokenProvider = localStorage.getItem('tokenProvider');\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        const currentTime = Date.now() / 1000;\n        if (decodedToken.exp < currentTime) {\n          localStorage.removeItem('token');\n          localStorage.removeItem('tokenProvider');\n          setIsAuthenticated(false);\n        } else {\n          setIsAuthenticated(true);\n          setProfile(decodedToken);\n        }\n      } catch (error) {\n        console.error('토큰 해독 실패:', error.message);\n        // JWT 토큰이 아닌 경우\n        if (tokenProvider === 'naver') {\n          await validateNaverToken(token);\n        } else if (tokenProvider === 'kakao') {\n          await validateKakaoToken(token);\n        } else {\n          localStorage.removeItem('token');\n          localStorage.removeItem('tokenProvider');\n          setIsAuthenticated(false);\n        }\n      }\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    checkTokenValidity();\n  }, []);\n  const validateNaverToken = async token => {\n    try {\n      const response = await axios.get('https://openapi.naver.com/v1/nid/me', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setProfile({\n        name: response.data.response.name,\n        email: response.data.response.email\n      });\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Failed to validate Naver token:', error.message);\n      localStorage.removeItem('token');\n      localStorage.removeItem('tokenProvider');\n      setIsAuthenticated(false);\n    }\n  };\n  const validateKakaoToken = async token => {\n    try {\n      const response = await axios.get('https://kapi.kakao.com/v2/user/me', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setProfile({\n        nickname: response.data.properties.nickname,\n        email: response.data.kakao_account.email\n      });\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Failed to validate Kakao token:', error.message);\n      localStorage.removeItem('token');\n      localStorage.removeItem('tokenProvider');\n      setIsAuthenticated(false);\n    }\n  };\n  useEffect(() => {\n    checkTokenValidity();\n  }, []);\n  const handleOAuthCallback = async (accessToken, provider) => {\n    localStorage.setItem('token', accessToken);\n    localStorage.setItem('tokenProvider', provider);\n    if (provider === 'naver') {\n      await validateNaverToken(accessToken);\n    } else if (provider === 'kakao') {\n      await validateKakaoToken(accessToken);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      setIsAuthenticated,\n      profile,\n      setProfile,\n      handleOAuthCallback\n    },\n    children: !loading ? children : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 30\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"PDdYRZcy1uUrqZVLOfQnzI+oIZY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jwtDecode","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","loading","setLoading","profile","setProfile","checkTokenValidity","token","localStorage","getItem","tokenProvider","decodedToken","currentTime","Date","now","exp","removeItem","error","console","message","validateNaverToken","validateKakaoToken","response","get","headers","Authorization","name","data","email","nickname","properties","kakao_account","handleOAuthCallback","accessToken","provider","setItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/workspace/final_4market_frontend/src/services/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport axios from 'axios';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [profile, setProfile] = useState(null);\r\n\r\n  const checkTokenValidity = async () => {\r\n    const token = localStorage.getItem('token');\r\n    const tokenProvider = localStorage.getItem('tokenProvider');\r\n\r\n    if (token) {\r\n      try {\r\n        const decodedToken = jwtDecode(token);\r\n        const currentTime = Date.now() / 1000;\r\n        if (decodedToken.exp < currentTime) {\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('tokenProvider');\r\n          setIsAuthenticated(false);\r\n        } else {\r\n          setIsAuthenticated(true);\r\n          setProfile(decodedToken);\r\n        }\r\n      } catch (error) {\r\n        console.error('토큰 해독 실패:', error.message);\r\n        // JWT 토큰이 아닌 경우\r\n        if (tokenProvider === 'naver') {\r\n          await validateNaverToken(token);\r\n        } else if (tokenProvider === 'kakao') {\r\n          await validateKakaoToken(token);\r\n        } else {\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('tokenProvider');\r\n          setIsAuthenticated(false);\r\n        }\r\n      }\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkTokenValidity();\r\n  }, []);\r\n\r\n  const validateNaverToken = async (token) => {\r\n    try {\r\n      const response = await axios.get('https://openapi.naver.com/v1/nid/me', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setProfile({\r\n        name: response.data.response.name,\r\n        email: response.data.response.email,\r\n      });\r\n      setIsAuthenticated(true);\r\n    } catch (error) {\r\n      console.error('Failed to validate Naver token:', error.message);\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('tokenProvider');\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  const validateKakaoToken = async (token) => {\r\n    try {\r\n      const response = await axios.get('https://kapi.kakao.com/v2/user/me', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setProfile({\r\n        nickname: response.data.properties.nickname,\r\n        email: response.data.kakao_account.email,\r\n      });\r\n      setIsAuthenticated(true);\r\n    } catch (error) {\r\n      console.error('Failed to validate Kakao token:', error.message);\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('tokenProvider');\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkTokenValidity();\r\n  }, []);\r\n\r\n  const handleOAuthCallback = async (accessToken, provider) => {\r\n    localStorage.setItem('token', accessToken);\r\n    localStorage.setItem('tokenProvider', provider);\r\n    if (provider === 'naver') {\r\n      await validateNaverToken(accessToken);\r\n    } else if (provider === 'kakao') {\r\n      await validateKakaoToken(accessToken);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, setIsAuthenticated, profile, setProfile, handleOAuthCallback }}>\r\n      {!loading ? children : <div>Loading...</div>}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMgB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,aAAa,GAAGF,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAE3D,IAAIF,KAAK,EAAE;MACT,IAAI;QACF,MAAMI,YAAY,GAAGnB,SAAS,CAACe,KAAK,CAAC;QACrC,MAAMK,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;QACrC,IAAIH,YAAY,CAACI,GAAG,GAAGH,WAAW,EAAE;UAClCJ,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;UAChCR,YAAY,CAACQ,UAAU,CAAC,eAAe,CAAC;UACxCf,kBAAkB,CAAC,KAAK,CAAC;QAC3B,CAAC,MAAM;UACLA,kBAAkB,CAAC,IAAI,CAAC;UACxBI,UAAU,CAACM,YAAY,CAAC;QAC1B;MACF,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAACE,OAAO,CAAC;QACzC;QACA,IAAIT,aAAa,KAAK,OAAO,EAAE;UAC7B,MAAMU,kBAAkB,CAACb,KAAK,CAAC;QACjC,CAAC,MAAM,IAAIG,aAAa,KAAK,OAAO,EAAE;UACpC,MAAMW,kBAAkB,CAACd,KAAK,CAAC;QACjC,CAAC,MAAM;UACLC,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;UAChCR,YAAY,CAACQ,UAAU,CAAC,eAAe,CAAC;UACxCf,kBAAkB,CAAC,KAAK,CAAC;QAC3B;MACF;IACF;IACAE,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACde,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,kBAAkB,GAAG,MAAOb,KAAK,IAAK;IAC1C,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,GAAG,CAAC,qCAAqC,EAAE;QACtEC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUlB,KAAK;QAChC;MACF,CAAC,CAAC;MACFF,UAAU,CAAC;QACTqB,IAAI,EAAEJ,QAAQ,CAACK,IAAI,CAACL,QAAQ,CAACI,IAAI;QACjCE,KAAK,EAAEN,QAAQ,CAACK,IAAI,CAACL,QAAQ,CAACM;MAChC,CAAC,CAAC;MACF3B,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC/DX,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;MAChCR,YAAY,CAACQ,UAAU,CAAC,eAAe,CAAC;MACxCf,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC;EAED,MAAMoB,kBAAkB,GAAG,MAAOd,KAAK,IAAK;IAC1C,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,GAAG,CAAC,mCAAmC,EAAE;QACpEC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUlB,KAAK;QAChC;MACF,CAAC,CAAC;MACFF,UAAU,CAAC;QACTwB,QAAQ,EAAEP,QAAQ,CAACK,IAAI,CAACG,UAAU,CAACD,QAAQ;QAC3CD,KAAK,EAAEN,QAAQ,CAACK,IAAI,CAACI,aAAa,CAACH;MACrC,CAAC,CAAC;MACF3B,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC/DX,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;MAChCR,YAAY,CAACQ,UAAU,CAAC,eAAe,CAAC;MACxCf,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC;EAEDV,SAAS,CAAC,MAAM;IACde,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM0B,mBAAmB,GAAG,MAAAA,CAAOC,WAAW,EAAEC,QAAQ,KAAK;IAC3D1B,YAAY,CAAC2B,OAAO,CAAC,OAAO,EAAEF,WAAW,CAAC;IAC1CzB,YAAY,CAAC2B,OAAO,CAAC,eAAe,EAAED,QAAQ,CAAC;IAC/C,IAAIA,QAAQ,KAAK,OAAO,EAAE;MACxB,MAAMd,kBAAkB,CAACa,WAAW,CAAC;IACvC,CAAC,MAAM,IAAIC,QAAQ,KAAK,OAAO,EAAE;MAC/B,MAAMb,kBAAkB,CAACY,WAAW,CAAC;IACvC;EACF,CAAC;EAED,oBACEtC,OAAA,CAACC,WAAW,CAACwC,QAAQ;IAACC,KAAK,EAAE;MAAErC,eAAe;MAAEC,kBAAkB;MAAEG,OAAO;MAAEC,UAAU;MAAE2B;IAAoB,CAAE;IAAAlC,QAAA,EAC5G,CAACI,OAAO,GAAGJ,QAAQ,gBAAGH,OAAA;MAAAG,QAAA,EAAK;IAAU;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAE3B,CAAC;AAAC1C,EAAA,CArGWF,YAAY;AAAA6C,EAAA,GAAZ7C,YAAY;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}