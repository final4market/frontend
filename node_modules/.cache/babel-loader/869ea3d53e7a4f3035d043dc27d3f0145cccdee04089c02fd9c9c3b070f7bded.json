{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\final_4market_frontend\\\\src\\\\services\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [profile, setProfile] = useState(null);\n  const checkTokenValidity = async () => {\n    const token = localStorage.getItem('token');\n    const tokenProvider = localStorage.getItem('tokenProvider');\n    console.log('Checking token validity', {\n      token,\n      tokenProvider\n    });\n    if (token) {\n      if (tokenProvider === 'naver') {\n        await validateNaverToken(token);\n      } else if (tokenProvider === 'kakao') {\n        await validateKakaoToken(token);\n      } else {\n        try {\n          const decodedToken = jwtDecode(token);\n          const currentTime = Date.now() / 1000;\n          console.log('Decoded token', decodedToken);\n          if (decodedToken.exp < currentTime) {\n            console.log('Token expired');\n            localStorage.removeItem('token');\n            localStorage.removeItem('tokenProvider');\n            setIsAuthenticated(false);\n          } else {\n            console.log('Token is valid');\n            setIsAuthenticated(true);\n            setProfile(decodedToken);\n            setRoles(decodedToken.roles || []);\n          }\n        } catch (error) {\n          console.error('Failed to decode token:', error.message);\n          localStorage.removeItem('token');\n          localStorage.removeItem('tokenProvider');\n          setIsAuthenticated(false);\n        }\n      }\n    } else {\n      setIsAuthenticated(false);\n    }\n    setLoading(false);\n  };\n  const validateNaverToken = async token => {\n    try {\n      /*const response = await axios.get('https://openapi.naver.com/v1/nid/me', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      });\r\n       setProfile({\r\n          name: response.data.response.name,\r\n          email: response.data.response.email,\r\n        }); */\n      setIsAuthenticated(true);\n      setRoles(['ROLE_USER']);\n    } catch (error) {\n      console.error('네이버 토큰 검증 실패:', error.message);\n      localStorage.removeItem('token');\n      localStorage.removeItem('tokenProvider');\n      setIsAuthenticated(false);\n    }\n  };\n  const validateKakaoToken = async token => {\n    try {\n      /* const response = await axios.get('https://kapi.kakao.com/v2/user/me', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setProfile({\r\n        nickname: response.data.properties.nickname,\r\n      }); */\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('카카오 토큰 검증 실패:', error.message);\n      localStorage.removeItem('token');\n      localStorage.removeItem('tokenProvider');\n      setIsAuthenticated(false);\n    }\n  };\n  useEffect(() => {\n    checkTokenValidity();\n  }, []);\n  const handleOAuthCallback = async (accessToken, provider) => {\n    localStorage.setItem('token', accessToken);\n    localStorage.setItem('tokenProvider', provider);\n    if (provider === 'naver') {\n      await validateNaverToken(accessToken);\n    } else if (provider === 'kakao') {\n      await validateKakaoToken(accessToken);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      setIsAuthenticated,\n      profile,\n      setProfile,\n      handleOAuthCallback\n    },\n    children: !loading ? children : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529 \\uC911\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 30\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"0hOogx2PTuEja9pQ4hJr+8YgQDw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jwtDecode","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","loading","setLoading","profile","setProfile","checkTokenValidity","token","localStorage","getItem","tokenProvider","console","log","validateNaverToken","validateKakaoToken","decodedToken","currentTime","Date","now","exp","removeItem","setRoles","roles","error","message","handleOAuthCallback","accessToken","provider","setItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/workspace/final_4market_frontend/src/services/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport axios from 'axios';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [profile, setProfile] = useState(null);\r\n\r\n  const checkTokenValidity = async () => {\r\n    const token = localStorage.getItem('token');\r\n    const tokenProvider = localStorage.getItem('tokenProvider');\r\n\r\n    console.log('Checking token validity', { token, tokenProvider });\r\n\r\n    if (token) {\r\n      if (tokenProvider === 'naver') {\r\n        await validateNaverToken(token);\r\n      } else if (tokenProvider === 'kakao') {\r\n        await validateKakaoToken(token);\r\n      } else {\r\n        try {\r\n          const decodedToken = jwtDecode(token);\r\n          const currentTime = Date.now() / 1000;\r\n          console.log('Decoded token', decodedToken);\r\n          if (decodedToken.exp < currentTime) {\r\n            console.log('Token expired');\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('tokenProvider');\r\n            setIsAuthenticated(false);\r\n          } else {\r\n            console.log('Token is valid');\r\n            setIsAuthenticated(true);\r\n            setProfile(decodedToken);\r\n            setRoles(decodedToken.roles || []);\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to decode token:', error.message);\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('tokenProvider');\r\n          setIsAuthenticated(false);\r\n        }\r\n      }\r\n    } else {\r\n      setIsAuthenticated(false);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const validateNaverToken = async (token) => {\r\n    try {\r\n      /*const response = await axios.get('https://openapi.naver.com/v1/nid/me', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n       setProfile({\r\n          name: response.data.response.name,\r\n          email: response.data.response.email,\r\n        }); */\r\n      setIsAuthenticated(true);\r\n      setRoles(['ROLE_USER']);\r\n    } catch (error) {\r\n      console.error('네이버 토큰 검증 실패:', error.message);\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('tokenProvider');\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  const validateKakaoToken = async (token) => {\r\n    try {\r\n      /* const response = await axios.get('https://kapi.kakao.com/v2/user/me', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setProfile({\r\n        nickname: response.data.properties.nickname,\r\n      }); */\r\n      setIsAuthenticated(true);\r\n    } catch (error) {\r\n      console.error('카카오 토큰 검증 실패:', error.message);\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('tokenProvider');\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkTokenValidity();\r\n  }, []);\r\n\r\n  const handleOAuthCallback = async (accessToken, provider) => {\r\n    localStorage.setItem('token', accessToken);\r\n    localStorage.setItem('tokenProvider', provider);\r\n    if (provider === 'naver') {\r\n      await validateNaverToken(accessToken);\r\n    } else if (provider === 'kakao') {\r\n      await validateKakaoToken(accessToken);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, setIsAuthenticated, profile, setProfile, handleOAuthCallback }}>\r\n      {!loading ? children : <div>로딩 중</div>}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}