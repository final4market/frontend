{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\final_4market_frontend\\\\src\\\\components\\\\subPage\\\\SubAddress.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Postcode from 'react-daum-postcode';\nimport styles from './css/sub_purchase_side.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SubAddress({\n  setAddressMainInfo,\n  resetAddress\n}) {\n  _s();\n  const [showPostcode, setShowPostcode] = useState(false);\n  const [selectAddress, setSelectAddress] = useState({});\n  useEffect(() => {\n    if (resetAddress) {\n      setSelectAddress({});\n    }\n  }, [resetAddress]);\n  const handleComplete = data => {\n    const fullAddress = data.userSelectedType === 'R' ? data.roadAddress : data.jibunAddress;\n    const address = {\n      fullAddress,\n      postalCode: data.zonecode\n    };\n    setSelectAddress(address);\n    setAddressMainInfo(address);\n    setShowPostcode(false);\n  };\n  const sidebarClass = showPostcode ? `${styles.postcode_side} ${styles.open}` : styles.postcode_side;\n  const postcodeStyle = {\n    width: '100%',\n    height: '100%',\n    marginTop: '70px',\n    borderTop: '1px solid black'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.address_container,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC8FC\\uC18C\\uCC3E\\uAE30\",\n        value: selectAddress.fullAddress || '',\n        onClick: () => setShowPostcode(true),\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), showPostcode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: sidebarClass,\n      children: [/*#__PURE__*/_jsxDEV(Postcode, {\n        onComplete: handleComplete,\n        autoClose: false,\n        style: postcodeStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowPostcode(false),\n        className: styles.close_button,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/img/back_arrow.png\",\n          alt: \"back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(SubAddress, \"dhtedMhBH4HblxAgKS/zha5JEcQ=\");\n_c = SubAddress;\nexport default SubAddress;\nvar _c;\n$RefreshReg$(_c, \"SubAddress\");","map":{"version":3,"names":["React","useEffect","useState","Postcode","styles","jsxDEV","_jsxDEV","SubAddress","setAddressMainInfo","resetAddress","_s","showPostcode","setShowPostcode","selectAddress","setSelectAddress","handleComplete","data","fullAddress","userSelectedType","roadAddress","jibunAddress","address","postalCode","zonecode","sidebarClass","postcode_side","open","postcodeStyle","width","height","marginTop","borderTop","children","className","address_container","type","placeholder","value","onClick","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","onComplete","autoClose","style","close_button","src","alt","_c","$RefreshReg$"],"sources":["D:/workspace/final_4market_frontend/src/components/subPage/SubAddress.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Postcode from 'react-daum-postcode';\r\nimport styles from './css/sub_purchase_side.module.css';\r\n\r\nfunction SubAddress({ setAddressMainInfo, resetAddress }) {\r\n  const [showPostcode, setShowPostcode] = useState(false);\r\n  const [selectAddress, setSelectAddress] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (resetAddress) {\r\n      setSelectAddress({});\r\n    }\r\n  }, [resetAddress]);\r\n\r\n\r\n  const handleComplete = (data) => {\r\n  \r\n    const fullAddress = data.userSelectedType === 'R' ? data.roadAddress : data.jibunAddress;\r\n    const address = {\r\n      fullAddress,\r\n      postalCode: data.zonecode\r\n    };\r\n\r\n    setSelectAddress(address);\r\n    setAddressMainInfo(address);\r\n    setShowPostcode(false);\r\n  };\r\n\r\n  const sidebarClass = showPostcode ? `${styles.postcode_side} ${styles.open}` : styles.postcode_side;\r\n\r\n  const postcodeStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n    marginTop : '70px',\r\n    borderTop : '1px solid black',\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <div className={styles.address_container}>\r\n        <input\r\n          type='text'\r\n          placeholder='주소찾기'\r\n          value={selectAddress.fullAddress || ''}\r\n          onClick={() => setShowPostcode(true)}\r\n          readOnly\r\n        />\r\n      </div>\r\n\r\n      {showPostcode && (\r\n        <div className={sidebarClass}>\r\n          <Postcode\r\n          onComplete={handleComplete}\r\n          autoClose={false}\r\n          style={postcodeStyle}\r\n          />\r\n          <button\r\n            onClick={() => setShowPostcode(false)}\r\n            className={styles.close_button}\r\n          >\r\n            <img src='/img/back_arrow.png' alt='back'></img>\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubAddress;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}